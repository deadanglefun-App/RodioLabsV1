version: '3.8'

services:
  # Nœud RODIO principal
  rodio-node:
    build: .
    container_name: rodio-node
    ports:
      - "8080:8080"
    environment:
      - POLYGON_RPC_URL=https://rpc-mumbai.maticvigil.com
      - PRIVATE_KEY=${PRIVATE_KEY}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - API_KEY=${API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rodio-network

  # Base de données PostgreSQL
  postgres:
    image: postgres:13
    container_name: rodio-postgres
    environment:
      POSTGRES_DB: rodio
      POSTGRES_USER: rodio
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-rodio_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - rodio-network

  # Redis pour cache
  redis:
    image: redis:6-alpine
    container_name: rodio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rodio-network

  # MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: rodio-mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    networks:
      - rodio-network

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: rodio-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rodio-network

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: rodio-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - rodio-network

volumes:
  postgres_data:
  redis_data:
  mosquitto_data:
  mosquitto_logs:
  prometheus_data:
  grafana_data:

networks:
  rodio-network:
    driver: bridge